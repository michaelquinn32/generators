% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fold.R
\name{foldc}
\alias{foldc}
\title{Consume a fold a generator, producing a scalar}
\usage{
foldc(.generator, .FUN, ..., .start = 0)
}
\arguments{
\item{.generator}{A function with the class \code{generator}}

\item{.FUN}{A binary fold function to reduce the generator to a single value}

\item{...}{Additional arguments to .FUN}

\item{.start}{The starting value for the reduction}
}
\description{
Generate iterations of a generator up to its limit, reducing the values
using a binary function.
}
\examples{
# Sum of numbers from 1 to 10
counter <- generator(0, function (state) state + 1)

counter \%>\%
  limit(~ state <= 10) \%>\%
  foldc(`+`)

# Version of Project Euler 2: Sum of even Fibonacci numbers
fib <- generator(c(0, 1),
                 ~ c(state[2], sum(state)),
                 ~ state[1])

fib \%>\%
  keep(~ state \%\% 2 == 0) \%>\%
  limit(~ state < 400) \%>\%
  foldc(`+`)

}
\seealso{
\code{\link{foldn}} and \code{\link{consume}}
}

